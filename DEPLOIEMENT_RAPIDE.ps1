# Script de d√©ploiement rapide - Tableau de Bord Agent (Windows PowerShell)

Write-Host "üöÄ D√©ploiement Tableau de Bord Agent" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan
Write-Host ""

# Fonctions utilitaires
function Write-Success {
    param($Message)
    Write-Host "‚úÖ $Message" -ForegroundColor Green
}

function Write-Error-Custom {
    param($Message)
    Write-Host "‚ùå $Message" -ForegroundColor Red
    exit 1
}

function Write-Warning-Custom {
    param($Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor Yellow
}

# V√©rifier Node.js
Write-Host "V√©rification de Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node -v
    Write-Success "Node.js trouv√©: $nodeVersion"
} catch {
    Write-Error-Custom "Node.js n'est pas install√©. T√©l√©chargez-le depuis https://nodejs.org"
}

# V√©rifier npm
try {
    $npmVersion = npm -v
    Write-Success "npm trouv√©: $npmVersion"
} catch {
    Write-Error-Custom "npm n'est pas install√©"
}

Write-Host ""
Write-Host "üì¶ √âtape 1: V√©rification des d√©pendances" -ForegroundColor Cyan
Write-Host "----------------------------------------" -ForegroundColor Cyan

# Backend
Write-Host "V√©rification backend..." -ForegroundColor Yellow
Set-Location backend

if (-Not (Test-Path "node_modules")) {
    Write-Warning-Custom "Installation des d√©pendances backend..."
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Error-Custom "√âchec installation backend"
    }
}
Write-Success "D√©pendances backend OK"

# Frontend
Write-Host "V√©rification frontend..." -ForegroundColor Yellow
Set-Location ..\agent-dashboard-frontend

if (-Not (Test-Path "node_modules")) {
    Write-Warning-Custom "Installation des d√©pendances frontend..."
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Error-Custom "√âchec installation frontend"
    }
}
Write-Success "D√©pendances frontend OK"

Write-Host ""
Write-Host "üèóÔ∏è  √âtape 2: Build Frontend" -ForegroundColor Cyan
Write-Host "----------------------------" -ForegroundColor Cyan

npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Error-Custom "√âchec du build frontend"
}
Write-Success "Build frontend termin√©"

# V√©rifier dist
if (-Not (Test-Path "dist")) {
    Write-Error-Custom "Dossier dist non cr√©√©"
}

# V√©rifier portal-root
$indexContent = Get-Content "dist\index.html" -Raw
if ($indexContent -match "portal-root") {
    Write-Success "portal-root trouv√© dans index.html"
} else {
    Write-Error-Custom "portal-root MANQUANT dans dist/index.html"
}

Write-Host ""
Write-Host "üß™ √âtape 3: Tests Pr√©-D√©ploiement" -ForegroundColor Cyan
Write-Host "--------------------------------" -ForegroundColor Cyan

# Test backend
Set-Location ..\backend
Write-Host "Test du backend..." -ForegroundColor Yellow

$backendJob = Start-Job -ScriptBlock { 
    Set-Location $using:PWD
    npm start 
}

Start-Sleep -Seconds 3

try {
    $response = Invoke-WebRequest -Uri "http://localhost:5000" -TimeoutSec 2 -ErrorAction SilentlyContinue
    Write-Success "Backend r√©pond"
} catch {
    Write-Warning-Custom "Backend ne r√©pond pas (v√©rifier manuellement)"
}

Stop-Job $backendJob -ErrorAction SilentlyContinue
Remove-Job $backendJob -ErrorAction SilentlyContinue

Write-Host ""
Write-Host "üìã R√©sum√©" -ForegroundColor Cyan
Write-Host "=========" -ForegroundColor Cyan
Write-Success "‚úÖ D√©pendances install√©es"
Write-Success "‚úÖ Build frontend cr√©√©"
Write-Success "‚úÖ Fichiers de configuration pr√©sents"
Write-Host ""
Write-Host "üì¶ Pr√™t pour le d√©ploiement !" -ForegroundColor Green
Write-Host ""
Write-Host "Prochaines √©tapes:" -ForegroundColor Yellow
Write-Host "1. D√©ployer le backend (Vercel/Render/Heroku)"
Write-Host "2. D√©ployer le frontend (Vercel/Netlify/GitHub Pages)"
Write-Host "3. Configurer les variables d'environnement"
Write-Host "4. Tester en production"
Write-Host ""
Write-Host "üìñ Voir GUIDE_DEPLOIEMENT.md pour les instructions d√©taill√©es" -ForegroundColor Cyan
Write-Host ""

# Retour au dossier racine
Set-Location ..
