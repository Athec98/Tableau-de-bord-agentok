# Script de test des connexions
Write-Host "üß™ Test des connexions..." -ForegroundColor Green

# Test 1: V√©rifier que les ports sont libres
Write-Host "`nüîç V√©rification des ports..." -ForegroundColor Yellow

$port5000 = Get-NetTCPConnection -LocalPort 5000 -ErrorAction SilentlyContinue
$port5173 = Get-NetTCPConnection -LocalPort 5173 -ErrorAction SilentlyContinue

if ($port5000) {
    Write-Host "‚ö†Ô∏è  Port 5000 d√©j√† utilis√©" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Port 5000 libre" -ForegroundColor Green
}

if ($port5173) {
    Write-Host "‚ö†Ô∏è  Port 5173 d√©j√† utilis√©" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Port 5173 libre" -ForegroundColor Green
}

# Test 2: V√©rifier les d√©pendances
Write-Host "`nüì¶ V√©rification des d√©pendances..." -ForegroundColor Yellow

# Backend
if (Test-Path "backend\node_modules") {
    Write-Host "‚úÖ Backend: node_modules pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend: node_modules manquant - ex√©cutez: cd backend && npm install" -ForegroundColor Red
}

# Frontend
if (Test-Path "agent-dashboard-frontend\node_modules") {
    Write-Host "‚úÖ Frontend: node_modules pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend: node_modules manquant - ex√©cutez: cd agent-dashboard-frontend && npm install" -ForegroundColor Red
}

# Test 3: V√©rifier les fichiers de configuration
Write-Host "`nüìÑ V√©rification des fichiers de configuration..." -ForegroundColor Yellow

if (Test-Path "backend\package.json") {
    Write-Host "‚úÖ Backend: package.json pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend: package.json manquant" -ForegroundColor Red
}

if (Test-Path "agent-dashboard-frontend\package.json") {
    Write-Host "‚úÖ Frontend: package.json pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend: package.json manquant" -ForegroundColor Red
}

if (Test-Path "backend\server.js") {
    Write-Host "‚úÖ Backend: server.js pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend: server.js manquant" -ForegroundColor Red
}

# Test 4: V√©rifier MongoDB
Write-Host "`nüóÑÔ∏è  V√©rification de MongoDB..." -ForegroundColor Yellow
try {
    $mongoProcess = Get-Process -Name "mongod" -ErrorAction SilentlyContinue
    if ($mongoProcess) {
        Write-Host "‚úÖ MongoDB en cours d'ex√©cution" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  MongoDB non d√©tect√© - assurez-vous qu'il est d√©marr√©" -ForegroundColor Yellow
        Write-Host "   Commande: mongod --dbpath C:\data\db" -ForegroundColor Cyan
    }
} catch {
    Write-Host "‚ö†Ô∏è  Impossible de v√©rifier MongoDB" -ForegroundColor Yellow
}

Write-Host "`nüéØ R√©sum√© des tests:" -ForegroundColor Cyan
Write-Host "1. Ex√©cutez: .\setup-env.ps1" -ForegroundColor White
Write-Host "2. D√©marrer MongoDB si n√©cessaire" -ForegroundColor White
Write-Host "3. Ex√©cutez: .\start-dev.ps1" -ForegroundColor White
Write-Host "4. Ouvrez: http://localhost:5173" -ForegroundColor White
