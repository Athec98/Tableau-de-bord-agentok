# Script de deploiement - Tableau de Bord Agent
# Automatise la preparation du deploiement

Write-Host "Preparation du deploiement..." -ForegroundColor Cyan
Write-Host ""

# V√©rifier Node.js
Write-Host "üìã V√©rification de Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node -v
    Write-Host "‚úÖ Node.js trouv√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√© !" -ForegroundColor Red
    exit 1
}

# V√©rifier npm
try {
    $npmVersion = npm -v
    Write-Host "‚úÖ npm trouv√©: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n'est pas install√© !" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üì¶ √âtape 1: V√©rification des d√©pendances" -ForegroundColor Cyan
Write-Host "----------------------------------------" -ForegroundColor Cyan

# Backend
Write-Host "Backend..." -ForegroundColor Yellow
Set-Location backend
if (-Not (Test-Path "node_modules")) {
    Write-Host "Installation des d√©pendances backend..." -ForegroundColor Yellow
    npm install
}
Write-Host "‚úÖ Backend OK" -ForegroundColor Green

# Frontend
Set-Location ..\agent-dashboard-frontend
Write-Host "Frontend..." -ForegroundColor Yellow
if (-Not (Test-Path "node_modules")) {
    Write-Host "Installation des d√©pendances frontend..." -ForegroundColor Yellow
    npm install
}
Write-Host "‚úÖ Frontend OK" -ForegroundColor Green

Write-Host ""
Write-Host "üèóÔ∏è  √âtape 2: Build Frontend" -ForegroundColor Cyan
Write-Host "----------------------------" -ForegroundColor Cyan

# Demander l'URL du backend
Write-Host ""
Write-Host "‚ö†Ô∏è  URL du backend Render (exemple: https://tableau-agent-backend.onrender.com/api)" -ForegroundColor Yellow
$backendUrl = Read-Host "Entrez l'URL de votre backend Render (ou appuyez sur Entr√©e pour utiliser localhost)"

if ([string]::IsNullOrWhiteSpace($backendUrl)) {
    $backendUrl = "http://localhost:5000/api"
    Write-Host "‚ÑπÔ∏è  Utilisation de l'URL locale: $backendUrl" -ForegroundColor Cyan
}

# Cr√©er .env.production
Write-Host "Cr√©ation de .env.production..." -ForegroundColor Yellow
"VITE_API_URL=$backendUrl" | Out-File -FilePath ".env.production" -Encoding UTF8
Write-Host "‚úÖ .env.production cr√©√©" -ForegroundColor Green

# Build
Write-Host "Build du frontend..." -ForegroundColor Yellow
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du build !" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Build termin√©" -ForegroundColor Green

# V√©rifier dist
if (-Not (Test-Path "dist")) {
    Write-Host "‚ùå Dossier dist non cr√©√© !" -ForegroundColor Red
    exit 1
}

# V√©rifier portal-root
$indexContent = Get-Content "dist\index.html" -Raw
if ($indexContent -match "portal-root") {
    Write-Host "‚úÖ portal-root trouv√© dans index.html" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  portal-root manquant dans dist/index.html" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìã √âtape 3: V√©rification Git" -ForegroundColor Cyan
Write-Host "----------------------------" -ForegroundColor Cyan

Set-Location ..

# V√©rifier si Git est install√©
Write-Host "V√©rification de Git..." -ForegroundColor Yellow
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git trouv√©: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Git n'est pas install√©" -ForegroundColor Yellow
    Write-Host "   T√©l√©chargez-le depuis: https://git-scm.com/download/win" -ForegroundColor Yellow
    Write-Host ""
}

# V√©rifier si .gitignore existe
if (-Not (Test-Path ".gitignore")) {
    Write-Host "Cr√©ation de .gitignore..." -ForegroundColor Yellow
    @"
node_modules/
.env
dist/
build/
.DS_Store
*.log
.vercel
"@ | Out-File -FilePath ".gitignore" -Encoding UTF8
    Write-Host "‚úÖ .gitignore cr√©√©" -ForegroundColor Green
} else {
    Write-Host "‚úÖ .gitignore existe" -ForegroundColor Green
}

Write-Host ""
Write-Host "‚úÖ Pr√©paration termin√©e !" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Prochaines √©tapes :" -ForegroundColor Cyan
Write-Host "=====================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1Ô∏è‚É£  Cr√©er un compte sur https://render.com" -ForegroundColor Yellow
Write-Host "2Ô∏è‚É£  Cr√©er un compte sur https://vercel.com" -ForegroundColor Yellow
Write-Host "3Ô∏è‚É£  Cr√©er un repository GitHub et pousser le code :" -ForegroundColor Yellow
Write-Host "    git init" -ForegroundColor White
Write-Host "    git add ." -ForegroundColor White
Write-Host "    git commit -m 'Initial commit'" -ForegroundColor White
Write-Host "    git remote add origin https://github.com/VOTRE-USERNAME/tableau-agent.git" -ForegroundColor White
Write-Host "    git push -u origin main" -ForegroundColor White
Write-Host ""
Write-Host "4Ô∏è‚É£  Suivre le guide: DEPLOIEMENT_GRATUIT.md" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìñ Guide complet disponible dans: DEPLOIEMENT_GRATUIT.md" -ForegroundColor Cyan
Write-Host ""
Write-Host "üéâ Votre application est pr√™te pour le d√©ploiement !" -ForegroundColor Green
Write-Host ""
